export enum StripeWebhookEvents {
  BalanceAvailable = 'balance.available',
  CapabilityUpdated = 'capability.updated',
  ChargeCaptured = 'charge.captured',
  ChargeExpired = 'charge.expired',
  ChargeFailed = 'charge.failed',
  ChargePending = 'charge.pending',
  ChargeRefunded = 'charge.refunded',
  ChargeSucceeded = 'charge.succeeded',
  ChargeUpdated = 'charge.updated',
  ChargeDisputeClosed = 'charge.dispute.closed',
  ChargeDisputeCreated = 'charge.dispute.created',
  ChargeDisputeFundsReinstated = 'charge.dispute.funds_reinstated',
  ChargeDisputeFundsWithdrawn = 'charge.dispute.funds_withdrawn',
  ChargeDisputeUpdated = 'charge.dispute.updated',
  ChargeRefundUpdated = 'charge.refund.updated',
  CheckoutSessionAsyncPaymentFailed = 'checkout.session.async_payment_failed',
  CheckoutSessionAsyncPaymentSucceeded = 'checkout.session.async_payment_succeeded',
  CheckoutSessionCompleted = 'checkout.session.completed',
  CheckoutSessionExpired = 'checkout.session.expired',
  CouponCreated = 'coupon.created',
  CouponDeleted = 'coupon.deleted',
  CouponUpdated = 'coupon.updated',
  CreditNoteCreated = 'credit_note.created',
  CreditNoteUpdated = 'credit_note.updated',
  CreditNoteVoided = 'credit_note.voided',
  CustomerCreated = 'customer.created',
  CustomerDeleted = 'customer.deleted',
  CustomerUpdated = 'customer.updated',
  CustomerDiscountCreated = 'customer.discount.created',
  CustomerDiscountDeleted = 'customer.discount.deleted',
  CustomerDiscountUpdated = 'customer.discount.updated',
  CustomerSourceCreated = 'customer.source.created',
  CustomerSourceDeleted = 'customer.source.deleted',
  CustomerSourceExpiring = 'customer.source.expiring',
  CustomerSourceUpdated = 'customer.source.updated',
  CustomerSubscriptionCreated = 'customer.subscription.created',
  CustomerSubscriptionDeleted = 'customer.subscription.deleted',
  CustomerSubscriptionPendingUpdateApplied = 'customer.subscription.pending_update_applied',
  CustomerSubscriptionPendingUpdateExpired = 'customer.subscription.pending_update_expired',
  CustomerSubscriptionTrialWillEnd = 'customer.subscription.trial_will_end',
  CustomerSubscriptionUpdated = 'customer.subscription.updated',
  CustomerTaxIdCreated = 'customer.tax_id.created',
  CustomerTaxIdDeleted = 'customer.tax_id.deleted',
  CustomerTaxIdUpdated = 'customer.tax_id.updated',
  FileCreated = 'file.created',
  InvoiceCreated = 'invoice.created',
  InvoiceDeleted = 'invoice.deleted',
  InvoiceFinalized = 'invoice.finalized',
  InvoiceMarkedUncollectible = 'invoice.marked_uncollectible',
  InvoicePaid = 'invoice.paid',
  InvoicePaymentActionRequired = 'invoice.payment_action_required',
  InvoicePaymentFailed = 'invoice.payment_failed',
  InvoicePaymentSucceeded = 'invoice.payment_succeeded',
  InvoiceSent = 'invoice.sent',
  InvoiceUpcoming = 'invoice.upcoming',
  InvoiceUpdated = 'invoice.updated',
  InvoiceVoided = 'invoice.voided',
  PaymentIntentAmountCapturableUpdated = 'payment_intent.amount_capturable_updated',
  PaymentIntentCanceled = 'payment_intent.canceled',
  PaymentIntentCreated = 'payment_intent.created',
  PaymentIntentPartiallyFunded = 'payment_intent.partially_funded',
  PaymentIntentPaymentFailed = 'payment_intent.payment_failed',
  PaymentIntentProcessing = 'payment_intent.processing',
  PaymentIntentRequiresAction = 'payment_intent.requires_action',
  PaymentIntentSucceeded = 'payment_intent.succeeded',
  PaymentMethodAttached = 'payment_method.attached',
  PaymentMethodAutomaticallyUpdated = 'payment_method.automatically_updated',
  PaymentMethodDetached = 'payment_method.detached',
  PaymentMethodUpdated = 'payment_method.updated'
}
